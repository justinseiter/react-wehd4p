/* ------------------------------------ *\
    #BUTTONS
\* ------------------------------------ */

$c-btn-padding-side: $gl-base-spacing-unit !default;
$c-btn-rounding: 3px !default;

// CONFIG MAPS
$c-btn-colors: (
    themes: (
        default: (
            text: $black,
            disabledText: $gray-600,
            background: $gray-100,
            hoverBackground: $gray-200,
            activeBackground: $gray-100,
            focusBackground: $white,
            disabledBackground: $gray-100,
            border: $gray-400,
            hoverBorder: $gray-400,
            activeBorder: $gray-500,
            disabledBorder: $gray-200,
            innerShadow: $gray-500,
            baseDot: $gray-500
        ),
        primary: (
            text: $white,
            disabledText: $gray-600,
            background: $blue,
            hoverBackground: $inky-700,
            activeBackground: $blue,
            disabledBackground: $gray-100,
            focusBackground: $icy-300,
            border: $blue,
            disabledBorder: $gray-200,
            activeBorder: $inky-700,
            innerShadow: $inky-700,
            baseDot: $icy-100
        ),
        assertive: (
            text: $white,
            disabledText: $gray-600,
            background: $blam-600,
            hoverBackground: $blam-700,
            activeBackground: $blam-600,
            focusBackground: $blam-300,
            disabledBackground: $gray-100,
            border: $blam-600,
            hoverBorder: $blam-700,
            activeBorder: $blam-600,
            disabledBorder: $gray-200,
            innerShadow: $blam-600,
            baseDot: $blam-100
        ),
        upgrade: (
            text: $white,
            disabledText: $gray-600,
            background: $slime-600,
            hoverBackground: $slime-700,
            activeBackground: $slime-600,
            focusBackground: $slime-300,
            disabledBackground: $gray-100,
            border: $slime-600,
            hoverBorder: $slime-700,
            activeBorder: $slime-600,
            disabledBorder: $gray-200,
            innerShadow: $slime-600,
            baseDot: $slime-100
        ),
        link: (
            text: $blue,
            disabledText: $gray-600,
            background: none,
            hoverBackground: none,
            activeBackground: none,
            focusBackground: none,
            disabledBackground: none,
            border: none,
            hoverBorder: none,
            activeBorder: none,
            disabledBorder: none,
            innerShadow: none,
            baseDot: $blue
        ),
    )
);

$c-btn-sizes: (
    sizes: (
        small: (
            fontSize: 16px,
            height: 30px,
        ),
        medium: (
            fontSize: 16px,
            height: 36px
        ),
        large: (
            fontSize: 16px,
            height: 36px
        )
    )
);


// BUILD THE CODE
.c-btn {

    // TEXT /////////////////////////////////////
    @include font-weight(semibold);
    @include sentence-case;
    line-height: normal;

    &--custom-case {
        text-transform: inherit;
    }

    // BOX /////////////////////////////////////
    min-width: 90px;
    padding-left: $c-btn-padding-side;
    padding-right: $c-btn-padding-side;
    border: 1px solid;
    border-radius: $c-btn-rounding;

    // BEHAVIOR /////////////////////////////////////
    cursor: pointer;
    transition: all .1s;

    &--loading {
        pointer-events: none;
        cursor: default;
    }

    // COLORS /////////////////////////////////////
    @each $theme in map-keys(map-get($c-btn-colors, themes)) {
        &--#{$theme} {
            background-color: map-deep-get($c-btn-colors, themes, $theme, background);
            color: map-deep-get($c-btn-colors, themes, $theme, text);
            border-color: map-deep-get($c-btn-colors, themes, $theme, border);

            &:hover {
                background-color: map-deep-get($c-btn-colors, themes, $theme, hoverBackground);
                border-color: map-deep-get($c-btn-colors, themes, $theme, hoverBorder);
            }

            &:focus {
                @include input-focus-hover;
            }

            &:active {
                background-color: map-deep-get($c-btn-colors, themes, $theme, activeBackground);
                border-color: map-deep-get($c-btn-colors, themes, $theme, activeBorder);
                box-shadow: inset 0 1px 2px 0 map-deep-get($c-btn-colors, themes, $theme, innerShadow);
            }

            &.is-disabled {
                background-color: map-deep-get($c-btn-colors, themes, $theme, disabledBackground);
                border-color: map-deep-get($c-btn-colors, themes, $theme, disabledBorder);
                color: map-deep-get($c-btn-colors, themes, $theme, disabledText);
                cursor: not-allowed;
            }
        }
    }

    // SIZES /////////////////////////////////////
    @each $size in map-keys(map-get($c-btn-sizes, sizes)) {
        &--#{$size} {
            height: map-deep-get($c-btn-sizes, sizes, $size, height);
            font-size: map-deep-get($c-btn-sizes, sizes, $size, fontSize);
        }
    }

    // SUB-COMPONENTS /////////////////////////////////////
    &__dot {
        display: inline-block;
        height: 10px;
        width: 10px;
        margin: 0 1px;
        border-radius: 100%;
        animation-duration: .5s;
        animation-timing-function: ease-out;
        animation-direction: alternate;
        animation-iteration-count: infinite;
        animation-fill-mode: none;
        animation-play-state: running;

        // TYPES /////////////////////////////////////
        @each $theme in map-keys(map-get($c-btn-colors, themes)) {
            &--#{$theme} {
                animation-name: loading-#{$theme};
            }
        }
    }

    &__dot--first {
        animation-delay: 0s;
    }

    &__dot--second {
        animation-delay: .1s;
    }

    &__dot--third {
        animation-delay: .2s;
    }

    &--link {
        // set 'bold' here to match anchor styles
        @include font-weight(bold);
        padding: 0;
        height: auto;
        min-width: inherit;
        border: 0;
        background: none;

        &.c-btn--small {
            @include gl-font-size(14px);
        }

        &.c-btn--large {
            @include gl-font-size(18px);
        }
    }

    .c-icon {
        display: inline-block;
        position: relative;
        top: 2px;
        margin-right: 10px;
    }
}

// ANIMATIONS /////////////////////////////////////
@each $theme in map-keys(map-get($c-btn-colors, themes)) {
    $loading-dot-instance-color: map-deep-get($c-btn-colors, themes, $theme, baseDot);
    @keyframes loading-#{$theme} {
        0% {
            transform: scale(.5);
            background-color: $loading-dot-instance-color;
        }

        100% {
            transform: scale(1);
            background-color: lighten($loading-dot-instance-color, 10);
        }
    }
}
